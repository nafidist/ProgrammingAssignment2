## Caching the Inverse of a Matrix

## makeCacheMatrix function creates a special "matrix" object that can cache its inverse

makeCacheMatrix <- function(x = matrix()) {
inv_x<-NULL
  set<-function(y){
    x<<- y
    inv_x<<- NULL
  }
  get<-function() x
  setinverse<- function(solve) inv_x<-solve
  getinverse<-function() inv_x
  list(set=set,get=get,setinverse=setinverse,getinverse=getinverse)
}


## cacheSolve function computes the inverse of the matrix returned by makeCacheMatrix
cacheSolve <- function(x, ...) {
   inv_x<-x$getinverse()
  if(!is.null(inv_x)){
    message("getting cached data")
    return(inv_x)
  }
  data <- x$get()
  inv_x <- solve(data, ...)
  x$setinverse(inv_x)
  inv_x       
}
